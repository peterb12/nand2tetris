// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {

    /** Initializes the library. */
    function void init() {
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
      if (x < 0) {
        return -x;
      }
      return x;
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        // Slow implementation
        var int sum, multiplier, multiplicand;
        var boolean neg;
        
        if (((x > 0) & (y > 0)) | ((x < 0) & (y < 0))) {
            let neg = false;
        } else {
            let neg = true;
        }
        let x = Math.abs(x);
        let y = Math.abs(y);
        
        let sum = 0;
        if (x < y) {
            let multiplier = x;
            let multiplicand = y;
        } else {
            let multiplier = y;
            let multiplicand = x;
        }
        while (multiplier > 0) {
            let sum = sum + multiplicand;
            let multiplier = multiplier - 1;
        }
        if (neg) {
            let sum = -sum;
        }
            
        return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int quotient;
        var boolean neg;

        if (y = 0) {
            do Sys.error(2);
        }
        if (((x > 0) & (y > 0)) | ((x < 0) & (y < 0))) {
            let neg = false;
        } else {
            let neg = true;
        }
        let x = Math.abs(x);
        let y = Math.abs(y);

        while (x > 0) {
            let quotient = quotient + 1;
            let x = x - y;
        }
        if (neg) {
            let quotient = -quotient;
        }
        return quotient;
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        // Ha ha ha.
        // TODO: implement this for real.
        return 5;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
      if (a > b) {
        return a;
      }
      return b;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
      if (a < b) {
        return a;
      }
      return b;
    }
}
